call themis#option('recursive', 1)
call themis#option('exclude', '\.vim$')

set shiftwidth=2
set expandtab
if get(environ(), 'VIRTUALEDIT', '0') == '1'
  set virtualedit=all
else
  set virtualedit=
endif

let g:vsnip_test_mode = v:true
let g:vsnip_snippet_dir = fnamemodify(expand('<sfile>'), ':h') . '/misc'

imap <expr> <C-j>   vsnip#expandable()  ? '<Plug>(vsnip-expand)'         : '<C-j>'
smap <expr> <C-j>   vsnip#expandable()  ? '<Plug>(vsnip-expand)'         : '<C-j>'

imap <expr> <Tab>   vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<Tab>'
smap <expr> <Tab>   vsnip#jumpable(1)   ? '<Plug>(vsnip-jump-next)'      : '<Tab>'
imap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'
smap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'

imap <Plug>(vsnip-assert) <C-r>=<SID>assert()<CR>
nmap <expr><Plug>(vsnip-assert) <SID>assert()
smap <expr><Plug>(vsnip-assert) <SID>assert()

function! s:assert() abort
  let l:keys = sort(keys(g:vsnip_assert))
  if len(l:keys) > 0
    let l:key = l:keys[0]
    call g:vsnip_assert[l:key]()
    unlet! g:vsnip_assert[l:key]
  endif
  return ''
endfunction

