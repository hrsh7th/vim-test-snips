let s:expect = themis#helper('expect')

Describe vsnip

  Describe #get_context

    It should return context information in insert-mode
      enew!
      set filetype=basic_spec
      call setline(1, 'simple')
      call cursor([1, 6])

      let g:vsnip_assert = {}
      function g:vsnip_assert.step1()
        call s:expect(mode(1)).to_equal('i')
        call s:expect(vsnip#get_context()).to_equal({
        \   'range': {
        \     'start': {
        \       'line': 0,
        \       'character': 0,
        \     },
        \     'end': {
        \       'line': 0,
        \       'character': 6,
        \     },
        \   },
        \   'snippet': {
        \     'label': 'simple',
        \     'description': 'simple snippet',
        \     'prefix': ['simple'],
        \     'prefix_alias': [],
        \     'body': [
        \       'snippet'
        \     ],
        \   }
        \ })
      endfunction
      call feedkeys("a\<Plug>(vsnip-assert)", 'x')
    End

    It should return context information in normal-mode
      enew!
      set filetype=basic_spec
      call setline(1, 'simple')
      call cursor([1, 6])

      call s:expect(mode(1)).to_equal('n')
      call s:expect(vsnip#get_context()).to_equal({
      \   'range': {
      \     'start': {
      \       'line': 0,
      \       'character': 0,
      \     },
      \     'end': {
      \       'line': 0,
      \       'character': 6,
      \     },
      \   },
      \   'snippet': {
      \     'label': 'simple',
      \     'description': 'simple snippet',
      \     'prefix': ['simple'],
      \     'prefix_alias': [],
      \     'body': [
      \       'snippet'
      \     ],
      \   }
      \ })
    End

    It should return context information in select-mode
      enew!
      set filetype=basic_spec
      call setline(1, 'simple')
      call feedkeys("v\<C-g>", 'x')
      call cursor([1, 6])

      call s:expect(mode(1)).to_equal('s')
      call s:expect(vsnip#get_context()).to_equal({
      \   'range': {
      \     'start': {
      \       'line': 0,
      \       'character': 0,
      \     },
      \     'end': {
      \       'line': 0,
      \       'character': 6,
      \     },
      \   },
      \   'snippet': {
      \     'label': 'simple',
      \     'description': 'simple snippet',
      \     'prefix': ['simple'],
      \     'prefix_alias': [],
      \     'body': [
      \       'snippet'
      \     ],
      \   }
      \ })
    End

  End

  Describe #get_complete_items

    It should return complete items
      enew!
      set filetype=basic_spec
      call s:expect(vsnip#get_complete_items(bufnr('%'))[-1]).to_equal({
      \   'word': 'simple',
      \   'abbr': 'simple',
      \   'kind': 'Snippet',
      \   'menu': '[v] simple snippet',
      \   'dup': 1,
      \   'user_data': json_encode({
      \     'vsnip': {
      \       'snippet': [
      \         "snippet"
      \       ]
      \     }
      \   })
      \ })
    End

  End

End

